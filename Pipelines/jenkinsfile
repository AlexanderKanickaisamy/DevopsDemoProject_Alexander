node {
  try {
    notifyBuild('STARTED')
    // some block

 // Get Artifactory Server Instace Details

 def server = Artifactory.server "01"
 def buildInfo = Artifactory.newBuildInfo()

 // Project Path
 def project_path = "App-Code/testapp-code"


 stage('Git CheckOut') {
  git branch: 'main', url: 'https://github.com/AlexanderKanickaisamy/DevopsDemoProject_Alexander.git' 
 }
 
 dir(project_path) {

 stage('Maven Clean') {
  sh 'mvn clean'
 }

 stage('Maven Compile') {
  sh 'mvn compile'
 }
 
 stage('Maven Test') {
    sh 'mvn test'
 }

 stage('Maven Package') {
  sh 'mvn package'
 }


 stage('Build Management') {
		def uploadSpec = """{ 
			"files": [
			{
			"pattern": "**/*.war",
			"target": "samplejavaapp-repo"
			}
		]

	}"""
	
	server.upload spec: uploadSpec
}

stage('Publish Build Info'){
   server.publishBuildInfo buildInfo
}

 stage('Archive Artifact') {
  archiveArtifacts artifacts: 'target/maven-web-application.war', followSymlinks: false
 }


 stage('Docker Deployment') {
  sh 'docker-compose up -d --build'
 }

 stage('Getting Ready For Ansible Deployment'){
     sh "echo \'<h1>JENKINS TASK BUILD ID: ${env.BUILD_DISPLAY_NAME}</h1>\' > terraform-code/ansible-code/roles/webappjboss/files/jenkins.html"
 }

 
 stage('Getting Ready For Terraform Deployment'){
     sh "cp -rf target/maven-web-application.war terraform-code/ansible-code/roles/webappjboss/files/"
 }

 stage('Terraform Deployment'){
     sh "cd terraform-code; terraform init ; terraform apply --auto-approve"
 } catch (e) {
    // If there was an exception thrown, the build failed
    currentBuild.result = "FAILED"
    throw e
  } finally {
    // Success or failure, always send notifications
    notifyBuild(currentBuild.result)
  }


def notifyBuild(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus = buildStatus ?: 'SUCCESS'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"
  def details = """<p>STARTED: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]':</p>
    <p>Check console output at &QUOT;<a href='${env.BUILD_URL}'>${env.JOB_NAME} [${env.BUILD_NUMBER}]</a>&QUOT;</p>"""

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESS') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  emailext (
      subject: subject,
      body: details,
      recipientProviders: [[$class: 'DevelopersRecipientProvider']]
    )
   }
  }

